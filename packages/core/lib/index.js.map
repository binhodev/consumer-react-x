{"version":3,"sources":["../src/index.ts","../src/client/consumer-client.ts"],"sourcesContent":["export * from \"./client/consumer-client\";\r\nexport * from \"./types\";\r\n","import axios, {\r\n    AxiosInstance,\r\n    AxiosResponse,\r\n    InternalAxiosRequestConfig,\r\n} from \"axios\";\r\nimport {\r\n    ConsumerReactClientOptions,\r\n    ConsumerReactError,\r\n    ConsumerReactPlugin,\r\n} from \"../types\";\r\n\r\nexport class ConsumerReactClient {\r\n    private client: AxiosInstance;\r\n    private plugins: ConsumerReactPlugin[] = [];\r\n\r\n    constructor(private options: ConsumerReactClientOptions) {\r\n        this.client = axios.create({\r\n            baseURL: options.baseUrl,\r\n            timeout: options.timeout || 5000,\r\n        });\r\n\r\n        if (options.plugins) {\r\n            this.plugins = options.plugins;\r\n        }\r\n\r\n        this.client.interceptors.request.use(\r\n            async (config: InternalAxiosRequestConfig<any>) => {\r\n                if (options.interceptors?.beforeRequest) {\r\n                    config = await options.interceptors.beforeRequest(config);\r\n                }\r\n\r\n                for (const plugin of this.plugins) {\r\n                    if (plugin.beforeRequest) {\r\n                        config = await plugin.beforeRequest(config);\r\n                    }\r\n                }\r\n\r\n                return config;\r\n            }\r\n        );\r\n\r\n        this.client.interceptors.response.use(\r\n            async (response: AxiosResponse) => {\r\n                if (options.interceptors?.afterResponse) {\r\n                    response = await options.interceptors.afterResponse(\r\n                        response\r\n                    );\r\n                }\r\n\r\n                for (const plugin of this.plugins) {\r\n                    if (plugin.afterResponse) {\r\n                        response = await plugin.afterResponse(response);\r\n                    }\r\n                }\r\n\r\n                return response;\r\n            },\r\n            async (error) => {\r\n                const consumerError: ConsumerReactError = {\r\n                    ...error,\r\n                    message: error.message,\r\n                    status: error.response?.status,\r\n                    code: error.code,\r\n                    data: error.response?.data,\r\n                    originalError: error,\r\n                };\r\n\r\n                return Promise.reject(consumerError);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * get<T>\r\n     */\r\n    public async get<T>(route: string, config?: InternalAxiosRequestConfig) {\r\n        return await this.client.get<T>(route, config);\r\n    }\r\n\r\n    /**\r\n     * post<T>\r\n     */\r\n    public post<T>(\r\n        route: string,\r\n        data?: any,\r\n        config?: InternalAxiosRequestConfig\r\n    ): Promise<T> {\r\n        return this.client.post(route, data, config);\r\n    }\r\n\r\n    /**\r\n     * put<T>\r\n     */\r\n    public put<T>(\r\n        route: string,\r\n        data?: any,\r\n        config?: InternalAxiosRequestConfig\r\n    ): Promise<T> {\r\n        return this.client.put(route, data, config);\r\n    }\r\n\r\n    /**\r\n     * patch<T>\r\n     */\r\n    public patch<T>(\r\n        route: string,\r\n        data?: any,\r\n        config?: InternalAxiosRequestConfig\r\n    ): Promise<T> {\r\n        return this.client.patch(route, data, config);\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,mBAIO;AAOA,IAAM,sBAAN,MAA0B;AAAA,EAI7B,YAAoB,SAAqC;AAArC;AAChB,SAAK,SAAS,aAAAA,QAAM,OAAO;AAAA,MACvB,SAAS,QAAQ;AAAA,MACjB,SAAS,QAAQ,WAAW;AAAA,IAChC,CAAC;AAED,QAAI,QAAQ,SAAS;AACjB,WAAK,UAAU,QAAQ;AAAA,IAC3B;AAEA,SAAK,OAAO,aAAa,QAAQ;AAAA,MAC7B,OAAO,WAA4C;AAC/C,YAAI,QAAQ,cAAc,eAAe;AACrC,mBAAS,MAAM,QAAQ,aAAa,cAAc,MAAM;AAAA,QAC5D;AAEA,mBAAW,UAAU,KAAK,SAAS;AAC/B,cAAI,OAAO,eAAe;AACtB,qBAAS,MAAM,OAAO,cAAc,MAAM;AAAA,UAC9C;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,SAAK,OAAO,aAAa,SAAS;AAAA,MAC9B,OAAO,aAA4B;AAC/B,YAAI,QAAQ,cAAc,eAAe;AACrC,qBAAW,MAAM,QAAQ,aAAa;AAAA,YAClC;AAAA,UACJ;AAAA,QACJ;AAEA,mBAAW,UAAU,KAAK,SAAS;AAC/B,cAAI,OAAO,eAAe;AACtB,uBAAW,MAAM,OAAO,cAAc,QAAQ;AAAA,UAClD;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,MACA,OAAO,UAAU;AACb,cAAM,gBAAoC;AAAA,UACtC,GAAG;AAAA,UACH,SAAS,MAAM;AAAA,UACf,QAAQ,MAAM,UAAU;AAAA,UACxB,MAAM,MAAM;AAAA,UACZ,MAAM,MAAM,UAAU;AAAA,UACtB,eAAe;AAAA,QACnB;AAEA,eAAO,QAAQ,OAAO,aAAa;AAAA,MACvC;AAAA,IACJ;AAAA,EACJ;AAAA,EA1DQ;AAAA,EACA,UAAiC,CAAC;AAAA;AAAA;AAAA;AAAA,EA8D1C,MAAa,IAAO,OAAe,QAAqC;AACpE,WAAO,MAAM,KAAK,OAAO,IAAO,OAAO,MAAM;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA,EAKO,KACH,OACA,MACA,QACU;AACV,WAAO,KAAK,OAAO,KAAK,OAAO,MAAM,MAAM;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAKO,IACH,OACA,MACA,QACU;AACV,WAAO,KAAK,OAAO,IAAI,OAAO,MAAM,MAAM;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA,EAKO,MACH,OACA,MACA,QACU;AACV,WAAO,KAAK,OAAO,MAAM,OAAO,MAAM,MAAM;AAAA,EAChD;AACJ;","names":["axios"]}